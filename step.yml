title: Detect vulnerabilities in a project with Tartufo
summary: Analyzes Git repositories using Tartufo to detect secrets in Git history and codebase
description: |-
  Analyzes Git repositories using Tartufo to detect secrets in Git history and codebase.
  
  This Step supports both Git history scanning and current working directory scanning.
  It provides comprehensive configuration options including allowlist/baseline files,
  custom entropy sensitivity, and additional command-line arguments.

  This Step is based on [Tartufo](https://github.com/godaddy/tartufo)
website: https://github.com/ferPrieto/steps-tartufo
source_code_url: https://github.com/ferPrieto/steps-tartufo
support_url: https://github.com/ferPrieto/steps-tartufo/issues
published_at: 2022-12-11T20:20:20.844179195Z
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

project_type_tags:
  - android
  - xamarin
  - react-native
  - flutter
  - cordova
  - ionic 

type_tags:
  - scan

is_requires_admin_user: true
is_always_run: true
is_skippable: true
run_if: ""

deps:
  brew:
  - name: jq
  - name: python3
  apt_get:
  - name: jq
  - name: python3
  - name: python3-pip
  curl:
  - name: jq

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - scan_mode: "history"
    opts:
      category: Scan Configuration
      title: Scan Mode
      description: |
        Choose between scanning Git history or current working directory.
        - history: Scan the entire Git history for secrets
        - path: Scan only the current working directory/files
      value_options:
        - "history"
        - "path"
      is_expand: true
      is_required: true

  - target_path: "$BITRISE_SOURCE_DIR"
    opts:
      category: Scan Configuration
      title: Target Path
      description: |
        The path to scan. For 'history' mode, this should be the Git repository root.
        For 'path' mode, this can be any directory or file.
      is_expand: true
      is_required: true

  - config_file_path: 
    opts:
      category: Configuration
      title: Tartufo Config File Path
      description: |
        Path to a tartufo configuration file (tartufo.toml or pyproject.toml).
        If not provided, default configuration will be used.
      is_expand: true
      is_required: false

  - baseline_file_path:
    opts:
      category: Configuration
      title: Baseline/Allowlist File Path
      description: |
        Path to a baseline file containing known/approved findings to exclude.
        This file should be in JSON format as generated by tartufo's --generate-baseline option.
      is_expand: true
      is_required: false

  - entropy_sensitivity: "90"
    opts:
      category: Detection Settings
      title: Entropy Sensitivity
      description: |
        Adjusts sensitivity for entropy-based detection (0-100).
        Higher values are more sensitive and may produce more false positives.
        Default is 90 for conservative detection that avoids massive output files.
        Use 75-85 for more sensitive detection, but beware of large outputs.
      is_expand: true
      is_required: true

  - regex_checks: "true"
    opts:
      category: Detection Settings
      title: Enable Regex Checks
      description: |
        Enable regular expression-based secret detection.
      value_options:
        - "true"
        - "false"
      is_expand: true
      is_required: true

  - entropy_checks: "true"
    opts:
      category: Detection Settings
      title: Enable Entropy Checks
      description: |
        Enable entropy-based secret detection.
      value_options:
        - "true"
        - "false"
      is_expand: true
      is_required: true

  - include_paths:
    opts:
      category: Path Filtering
      title: Include Paths
      description: |
        Comma-separated list of paths to include in the scan.
        Example: "src/,tests/,*.py"
      is_expand: true
      is_required: false

  - exclude_paths: ".git/,node_modules/,build/,dist/,*.log"
    opts:
      category: Path Filtering
      title: Exclude Paths
      description: |
        Comma-separated list of paths to exclude from the scan.
        Default excludes common large directories that rarely contain secrets.
        Example: "node_modules/,*.log,build/,vendor/"
      is_expand: true
      is_required: false

  - branch_name:
    opts:
      category: Git Configuration
      title: Branch Name
      description: |
        Specific branch to scan (only for history mode).
        If not specified, all branches will be scanned.
      is_expand: true
      is_required: false

  - since_commit:
    opts:
      category: Git Configuration
      title: Since Commit
      description: |
        Only scan commits after this commit hash (only for history mode).
        Useful for incremental scans.
      is_expand: true
      is_required: false

  - max_depth: "1000"
    opts:
      category: Git Configuration
      title: Max Depth
      description: |
        Maximum depth of commits to scan (only for history mode).
        Set to a lower value for faster scans of recent commits.
        Default is 1000 to prevent excessive scan times.
      is_expand: true
      is_required: false

  - scan_timeout: "300"
    opts:
      category: Advanced
      title: Scan Timeout (seconds)
      description: |
        Maximum time to allow the scan to run before timing out.
        Default is 300 seconds (5 minutes) to prevent hanging builds.
      is_expand: true
      is_required: false

  - extra_args:
    opts:
      category: Advanced
      title: Extra Arguments
      description: |
        Additional command-line arguments to pass to tartufo.
        Example: "--verbose --quiet"
      is_expand: true
      is_required: false

  - fail_on_findings: "true"
    opts:
      category: Behavior
      title: Fail on Findings
      description: |
        Whether to fail the build when secrets are found.
        Results are always saved to output files for subsequent steps.
      value_options:
        - "true"
        - "false"
      is_expand: true
      is_required: true

  - output_format: "text"
    opts:
      category: Output
      title: Output Format
      description: |
        Format for the output report.
      value_options:
        - "text"
        - "json"
        - "compact"
      is_expand: true
      is_required: true

  - show_debug_logs: "false"
    opts:
      category: Debug
      title: "Show debug logs?"
      description: |
        If true, the step will print detailed debug information and traces.
        Error logs are always shown regardless of this setting.
      value_options:
        - "false"
        - "true"
      is_expand: true
      is_required: true

outputs:
  - TARTUFO_FINDINGS_COUNT:
      title: Number of Findings
      description: |
        The total number of potential secrets detected by the scan.
        0 means no secrets were found.
  
  - TARTUFO_STATUS:
      title: Scan Status
      description: |
        Overall status of the scan. Values: "CLEAN" or "SECRETS_FOUND"
  
  - TARTUFO_HAS_SECRETS:
      title: Has Secrets Flag
      description: |
        Boolean flag indicating if secrets were found. Values: "true" or "false"
  
  - TARTUFO_BUILD_FAILED:
      title: Build Failed Flag
      description: |
        Boolean flag indicating if the build failed due to findings. Values: "true" or "false"
  
  - TARTUFO_RESULTS_FILE:
      title: Detailed Results File
      description: |
        Path to the detailed scan results file (text or JSON format)
  
  - TARTUFO_SUMMARY_FILE:
      title: Summary File
      description: |
        Path to the structured summary file containing scan overview and recommendations
  
  - TARTUFO_DEPLOY_FILE:
      title: Deployment File
      description: |
        Path to the deployment-ready summary file in $BITRISE_DEPLOY_DIR (if available)
        This file can be used with "Deploy to Bitrise.io" step
  
  - TARTUFO_JSON_RESULTS_FILE:
      title: JSON Results File
      description: |
        Path to the JSON-formatted results file for programmatic processing